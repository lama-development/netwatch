from sqlalchemy import Column, Integer, String, Float, DateTime, ForeignKey
from sqlalchemy.sql import func
from app.db.database import Base

class Device(Base):
    """
    SQLAlchemy model for network devices being monitored.
    
    Represents network devices with their properties and status information
    that is tracked and updated by the monitoring system.
    """
    __tablename__ = "devices"
    
    id = Column(Integer, primary_key=True, index=True)
    name = Column(String, nullable=False)
    ip = Column(String, nullable=False, unique=True)
    type = Column(String, nullable=False)
    status = Column(String, default="Unknown")          # Updated by monitor
    mac_address = Column(String, nullable=True)
    owner = Column(String, nullable=True)
    packet_loss = Column(Float, default=0.0)            # Calculated by monitor
    jitter = Column(Float, default=0.0)                 # Calculated by monitor
    uptime = Column(Float, default=0.0)                 # Calculated by monitor
    custom_alerts = Column(String, nullable=True)       # Comma-separated values

class Setting(Base):
    """
    SQLAlchemy model for application settings.
    
    Stores configuration settings that were previously in the settings.json file.
    Each setting is stored as a key-value pair.
    """
    __tablename__ = "settings"
    
    key = Column(String, primary_key=True, index=True)
    value = Column(String, nullable=False)
    description = Column(String, nullable=True)

class Alert(Base):
    """
    SQLAlchemy model for network alerts.
    
    Stores alerts generated by the monitoring system when devices
    have connectivity issues or other monitored conditions.
    """
    __tablename__ = "alerts"
    
    id = Column(Integer, primary_key=True, index=True)
    device_id = Column(Integer, ForeignKey("devices.id"), nullable=False)
    timestamp = Column(DateTime, default=func.now(), nullable=False)
    severity = Column(String, nullable=False)  # critical, warning, info
    type = Column(String, nullable=False)  # Connectivity, Performance, System
    message = Column(String, nullable=False)
    description = Column(String, nullable=True)
    status = Column(String, default="active", nullable=False)  # active, acknowledged, resolved
    resolved_at = Column(DateTime, nullable=True)
    duration = Column(String, nullable=True)
    resolution_note = Column(String, nullable=True)